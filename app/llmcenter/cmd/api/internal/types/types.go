// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package types

type ChatCompletionsRequest struct {
	ConversationID   string      `json:"conversation_id,optional"`
	Documenttype     string      `json:"documenttype"`
	Information      string      `json:"information"`
	Requests         string      `json:"requests"`
	UseKnowledgeBase bool        `json:"use_knowledge_base,optional"`
	KnowledgeBaseID  string      `json:"knowledge_base_id,optional"`
	References       []Reference `json:"references,optional"` // 来自 llm.api
}

type ChatCompletionsResponse struct {
}

type ChatResumeRequest struct {
	ConversationID string      `json:"conversation_id"`
	Content        string      `json:"content"`
	TemplateID     string      `json:"template_id,optional"`
	Documenttype   string      `json:"documenttype,optional"`
	References     []Reference `json:"references,optional"` // 来自 llm.api
}

type ChatResumeResponse struct {
}

type Conversation struct {
	ConversationID string `json:"conversation_id"`
	Title          string `json:"title"`
	UpdatedAt      string `json:"updated_at"`
}

type ConvertMarkdownLinkRequest struct {
	Type     string `json:"type"` // "pdf" | "docx"
	Markdown string `json:"markdown"`
}

type ConvertMarkdownLinkResponse struct {
	Filename    string `json:"filename"`
	ContentType string `json:"content_type"`
	Path        string `json:"path"`
	Url         string `json:"url"`
}

type Document struct {
	ID        string `json:"id"`
	Content   string `json:"content"`
	CreatedAt string `json:"created_at"`
}

type DownloadFileRequest struct {
	Prompt      string     `json:"prompt"`
	Type        string     `json:"type"` // "pdf" | "docx"
	Information []InfoItem `json:"information,optional"`
}

type EditDocumentRequest struct {
	ConversationID   string `json:"conversation_id"`
	MessageID        string `json:"message_id"`
	Prompt           string `json:"prompt"`
	UseKnowledgeBase bool   `json:"use_knowledge_base,optional"`
	KnowledgeBaseID  string `json:"knowledge_base_id,optional"`
}

type EditDocumentResponse struct {
}

type EmptyResp struct {
}

type FileReference struct {
	FileID   string `json:"file_id"`  // stored_name
	Filename string `json:"filename"` // 用户上传的原始文件名
	Function string `json:"function"` // 文件功能，例如 "file" | "formfile"
}

type FileUploadRequest struct {
}

type FileUploadResponse struct {
	FileID   string `json:"file_id"`
	FileName string `json:"file_name"`
	URL      string `json:"url,optional"`
	Message  string `json:"message"`
}

type GetConversationDetailRequest struct {
	ConversationID string `path:"conversation_id"`
}

type GetConversationDetailResponse struct {
	ConversationID string    `json:"conversation_id"`
	Title          string    `json:"title"`
	History        []Message `json:"history"` // llm.api 中定义的 Message 结构
}

type GetConversationsRequest struct {
}

type GetConversationsResponse struct {
	Data []Conversation `json:"data"` // llm.api 中定义的 Conversation 结构
}

type GetDocumentDetailRequest struct {
	ConversationID string `path:"conversation_id"`
}

type GetDocumentDetailResponse struct {
	ConversationID string     `json:"conversation_id"`
	Documents      []Document `json:"documents"`
}

type GetFileReq struct {
	Path string `form:"path"`
}

type GetHistoryDataRequest struct {
	ConversationID string `path:"conversation_id"`
}

type GetHistoryDataResponse struct {
	ConversationID string        `json:"conversation_id"`
	Items          []HistoryData `json:"items"`
}

type HistoryData struct {
	ID           string          `json:"id"`           // 对应 message_id
	Documenttype string          `json:"documenttype"` // 文章类型
	Information  string          `json:"information"`  // 基本信息
	Requests     string          `json:"requests"`     // 特殊要求
	CreatedAt    string          `json:"created_at"`   // 创建时间
	References   []FileReference `json:"references"`   // 文件引用
}

type InfoItem struct {
	Type    string `json:"type"`    // 注意字段名首字母大写
	Contant string `json:"contant"` // 保持和前端一致的拼写
}

type Message struct {
	ID          string `json:"id"`
	Role        string `json:"role"`
	Content     string `json:"content"`
	ContentType string `json:"content_type"`
	CreatedAt   string `json:"created_at"`
}

type PublicDownloadRequest struct {
	Path string `form:"path"` // 文件名，如 01HXXX.pdf
	Exp  int64  `form:"exp"`  // 过期时间戳（秒）
	Sig  string `form:"sig"`  // HMAC-SHA256(base64url)
}

type Reference struct {
	Type   string `json:"type"`
	FileID string `json:"file_id"`
}

type SSEEndEvent struct {
	ConversationID string `json:"conversation_id"`
	MessageID      string `json:"message_id"`
}

type SSEInterruptEvent struct {
	ConversationID string `json:"conversation_id"`
	MessageID      string `json:"message_id"`
	ContentType    string `json:"content_type"`
	Content        string `json:"content"`
}

type SSEMessageEvent struct {
	Chunk string `json:"chunk"`
}

type UpdateDocumentRequest struct {
	Conversation_id string `json:"conversation_id"`
	Message_id      string `json:"message_id"`
	Prompt          string `json:"prompt"`
}

type UpdateDocumentResponse struct {
	Success bool `json:"success"`
}
